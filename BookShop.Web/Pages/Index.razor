@page "/"
@using BookShop.Web.Components
@using BookShop.Models;
@using BookShop.Web.Interfaces;
@using System.Globalization;
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject DialogService DialogService

<RadzenText class="h1">Products</RadzenText>
@if (products is not null)
{
    <RadzenCard class="rz-mt-12" >
        <RadzenDataList PageSize="4" WrapItems="true" Data="@products" TItem="Product">
            <Template Context="product">
                <RadzenCard Class="rz-my-12 rz-mx-3" Style="max-width: 320px;">
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
                        @if (product.Image is not null)
                        {
                            <RadzenImage Path="@product.Image" Style="width: 100px; height: 100px; border-radius: 50%;" />
                        }
                        <RadzenStack Gap="0">
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Title</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@product.Name</b></RadzenText>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Author</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1"><b>@product.Author</b></RadzenText>
                        </RadzenStack>
                    </RadzenStack>
                    <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
                        <RadzenRow RowGap="0">
                            <RadzenColumn SizeSM="6">
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Category</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@product.Category.Name</b></RadzenText>
                            </RadzenColumn>
                            <RadzenColumn SizeSM="6">
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Price</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b> @string.Format(hr,"{0:C}",product.Price)</b></RadzenText>
                            </RadzenColumn>
                        </RadzenRow>
                    </RadzenCard>
                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0">
                        <RadzenButton Variant="Variant.Text" class="rz-text-secondary-color" Text="Info" Click="@(args=>GetDetails(product.Id))"/>
                        <RadzenButton Variant="Variant.Text" Text="Add to cart" />
                    </RadzenStack>
                </RadzenCard>
            </Template>
        </RadzenDataList>
    </RadzenCard>
}
else
{
    <RadzenProgressBarCircular ShowValue="true" Mode="ProgressBarMode.Indeterminate" Size="ProgressBarCircularSize.Large">
        <Template>Loading...</Template>
    </RadzenProgressBarCircular>
}

@code {
    CultureInfo hr = new CultureInfo("fr-FR");
    public List<Product>? products;
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        products = await ProductService.GetProducts();
    }
    public void GetDetails(int id)
    {
        NavigationManager.NavigateTo($"/product/{id}");
    }
}